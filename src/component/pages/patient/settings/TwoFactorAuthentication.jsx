import React, { useState } from 'react';
import './TwoFactorAuthentication.css'; // Import custom CSS for styling

export default function TwoFactorAuthentication() {
    const [formData, setFormData] = useState({ email: '', phone: '', otp: '' });
    const [errors, setErrors] = useState({ email: '', phone: '' });
    const [isEmailValid, setIsEmailValid] = useState(false);
    const [isPhoneValid, setIsPhoneValid] = useState(false);
    const [otp, setOtp] = useState({ digit1: '', digit2: '', digit3: '', digit4: '' });

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevData) => ({ ...prevData, [name]: value }));

        // Email validation
        if (name === 'email') {
            const isValidEmail = /\S+@\S+\.\S+/.test(value);
            setErrors((prevErrors) => ({ ...prevErrors, email: isValidEmail ? '' : 'Invalid email format' }));
            setIsEmailValid(isValidEmail && value !== '');
        }

        // Phone validation
        if (name === 'phone') {
            const isValidPhone = /^\d{10}$/.test(value);
            setErrors((prevErrors) => ({ ...prevErrors, phone: isValidPhone ? '' : 'Phone number must be exactly 10 digits' }));
            setIsPhoneValid(isValidPhone && value !== '');
        }
    };

    const handleOtpChange = (e) => {
        const { name, value } = e.target;
        setOtp((prevOtp) => ({ ...prevOtp, [name]: value }));
    };

    return (
        <div className='col-lg-12'>
            <div className="border-gray rounded-1 mt-3 p-3">
                <div className="d-flex justify-content-between align-items-center">
                    <h5 className="font-size-1 border-bottom border-gray pb-2">
                        <b>Two Factor Authentication</b>
                    </h5>
                    <div className="status-toggle">
                        <label className="switch">
                            <input type="checkbox" defaultChecked />
                            <span className="slider round"></span>
                        </label>
                    </div>
                </div>
            </div>

            {/* Email Setup */}
            <div className="email-setup-box mb-3 pb-3 border-bottom">
                <div className="mb-3">
                    <h6 className="mb-1"><b>Set up using an Email</b></h6>
                    <p className="fs-14">Enter your Email and we will send you a code</p>
                </div>
                <div className="d-flex align-items-center w-100 gap-2">
                    <div className="flex-grow-1">
                        <input
                            type="text"
                            className="form-control"
                            placeholder="Enter your email"
                            name="email"
                            value={formData.email}
                            onChange={handleChange}
                        />
                        {errors.email && <p className="text-danger">{errors.email}</p>}
                    </div>
                    <div>
                        <button className="btn btn-md btn-primary-gradient btn-primary" disabled={!isEmailValid}>
                            Continue
                        </button>
                    </div>
                </div>
                <hr />
                <label className="form-label">Enter the code generated by Email</label>
                <div className="otp-box setting-otp">
                    <div className="otp-input-group mb-2">
                        <input type="text" name="digit1" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                        <input type="text" name="digit2" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                        <input type="text" name="digit3" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                        <input type="text" name="digit4" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                    </div>
                    <button type="submit" className="btn btn-md btn-primary-gradient btn-primary">
                        Submit
                    </button>
                </div>
            </div>

            {/* SMS Setup */}
            <div className="email-setup-box mb-3 pb-3 border-bottom">
                <div className="mb-3">
                    <h6 className="mb-1"><b>Set up using an SMS</b></h6>
                    <p className="fs-14">Enter your phone number and we will send you a code</p>
                </div>
                <div className="d-flex align-items-center w-100 gap-2">
                    <div className="flex-grow-1">
                        <input
                            type="text"
                            className="form-control"
                            placeholder="Enter your phone number"
                            name="phone"
                            value={formData.phone}
                            onChange={handleChange}
                        />
                        {errors.phone && <p className="text-danger">{errors.phone}</p>}
                    </div>
                    <div>
                        <button className="btn btn-md btn-primary-gradient btn-primary" disabled={!isPhoneValid}>
                            Continue
                        </button>
                    </div>
                </div>
                <hr />
                <label className="form-label">Enter the code generated by SMS</label>
                <div className="otp-box setting-otp">
                    <div className="otp-input-group mb-2">
                        <input type="text" name="digit1" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                        <input type="text" name="digit2" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                        <input type="text" name="digit3" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                        <input type="text" name="digit4" maxLength={1} className="otp-input" onChange={handleOtpChange} />
                    </div>
                    <button type="submit" className="btn btn-md btn-primary-gradient btn-primary">
                        Submit
                    </button>
                </div>
            </div>
        </div>
    );
}
